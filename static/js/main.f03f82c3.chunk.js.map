{"version":3,"sources":["synth.js","App.js","serviceWorker.js","index.js"],"names":["audioContext","osc","filter","amp","lfo","delay","delaySource","feedback","recorder","recordingStream","window","AudioContext","webkitAudioContext","synth","createGain","gain","setValueAtTime","currentTime","createBiquadFilter","type","frequency","createOscillator","value","connect","start","createDelay","delayTime","state","resume","destination","disconnect","oscFreq","console","log","filterFreq","volume","amount","time","createMediaStreamDestination","MediaRecorder","stream","audioBitsPerSecond","mimeType","addEventListener","e","document","querySelector","src","URL","createObjectURL","data","stop","App","playing","recording","startSynth","setState","toggleRecording","stopRecording","startRecording","init","target","name","changeFreq","changeFilterFreq","changeAmp","changeLfoSpeed","changeDelayTime","changeDelayFeedback","id","className","onClick","this","htmlFor","orient","min","max","step","onInput","handleChange","defaultValue","controls","href","class","viewBox","fill-rule","clip-rule","d","Component","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f03f82c3.chunk.js","sourcesContent":["let audioContext,\r\n  osc,\r\n  filter,\r\n  amp,\r\n  lfo,\r\n  delay,\r\n  delaySource,\r\n  feedback,\r\n  recorder,\r\n  recordingStream;\r\n\r\naudioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n\r\nclass Synth {\r\n  init() {\r\n    // Set gain/amp\r\n    amp = audioContext.createGain();\r\n    amp.gain.setValueAtTime(1, audioContext.currentTime);\r\n\r\n    // Set filter\r\n    filter = audioContext.createBiquadFilter();\r\n    filter.type = \"lowshelf\";\r\n    filter.frequency.setValueAtTime(1000, audioContext.currentTime);\r\n    filter.gain.setValueAtTime(25, audioContext.currentTime);\r\n\r\n    // Set oscillator\r\n    osc = audioContext.createOscillator();\r\n    osc.type = \"sine\";\r\n    osc.frequency.value = 440;\r\n\r\n    // Set lfo\r\n    lfo = audioContext.createOscillator();\r\n    lfo.type = \"sine\";\r\n    lfo.frequency.value = 20;\r\n\r\n    // Connect nodes\r\n    lfo.connect(amp.gain);\r\n    osc.connect(filter);\r\n    filter.connect(amp);\r\n    lfo.start();\r\n    osc.start();\r\n\r\n    // Set delay\r\n    delaySource = amp;\r\n    delay = audioContext.createDelay();\r\n    delay.delayTime.value = 0.5;\r\n\r\n    feedback = audioContext.createGain();\r\n    feedback.gain.value = 0.8;\r\n\r\n    delay.connect(feedback);\r\n    feedback.connect(delay);\r\n    delaySource.connect(delay);\r\n  }\r\n\r\n  start() {\r\n    if (audioContext.state !== \"running\") {\r\n      audioContext.resume();\r\n    }\r\n    amp.connect(audioContext.destination);\r\n    delaySource.connect(audioContext.destination);\r\n    delay.connect(audioContext.destination);\r\n  }\r\n\r\n  stop() {\r\n    amp.disconnect(audioContext.destination);\r\n    delay.disconnect(audioContext.destination);\r\n  }\r\n\r\n  changeFreq(oscFreq) {\r\n    console.log(\"DCO frequency: \" + oscFreq + \" Hz\");\r\n    osc.frequency.value = oscFreq;\r\n  }\r\n\r\n  changeFilterFreq(filterFreq) {\r\n    console.log(\"Filter frequency: \" + filterFreq + \" Hz\");\r\n    filter.frequency.value = filterFreq;\r\n  }\r\n\r\n  changeAmp(volume) {\r\n    console.log(\"Volume: \" + volume);\r\n    delaySource.gain.value = volume;\r\n  }\r\n\r\n  changeLfoSpeed(amount) {\r\n    console.log(\"LFO speed: \" + amount + \" Hz\");\r\n    lfo.frequency.value = amount;\r\n  }\r\n\r\n  changeDelayTime(time) {\r\n    console.log(\"Delay time: \" + time);\r\n    delay.delayTime.value = time;\r\n  }\r\n\r\n  changeDelayFeedback(amount) {\r\n    console.log(\"Delay feedback: \" + amount);\r\n    feedback.gain.value = amount;\r\n  }\r\n\r\n  startRecording() {\r\n    recordingStream = audioContext.createMediaStreamDestination();\r\n\r\n    // Connect audio sources to recording stream\r\n    amp.connect(recordingStream);\r\n    delaySource.connect(recordingStream);\r\n    delay.connect(recordingStream);\r\n\r\n    let options = {\r\n      audioBitsPerSecond: 128000, // Maximum possible\r\n      mimeType: \"audio/webm\" // Only available audio format\r\n    };\r\n    recorder = new MediaRecorder(recordingStream.stream, options);\r\n    recorder.start();\r\n  }\r\n\r\n  stopRecording() {\r\n    recorder.addEventListener(\"dataavailable\", function(e) {\r\n      document.querySelector(\"#recording\").src = URL.createObjectURL(e.data);\r\n      recorder = null;\r\n      recordingStream = null;\r\n    });\r\n    recorder.stop();\r\n  }\r\n}\r\n\r\nexport default Synth;\r\n","import React, { Component } from \"react\";\r\nimport \"./index.css\";\r\nimport Synth from \"./synth\";\r\n\r\nlet synth = new Synth();\r\n\r\nclass App extends Component {\r\n  state = {\r\n    playing: false,\r\n    recording: false\r\n  };\r\n\r\n  // Initialise audio\r\n  componentDidMount() {\r\n    synth.init();\r\n  }\r\n\r\n  startSynth = playing => {\r\n    if (playing) {\r\n      synth.stop();\r\n      this.setState({ playing: false });\r\n    } else {\r\n      synth.start();\r\n      this.setState({ playing: true });\r\n    }\r\n  };\r\n\r\n  toggleRecording = recording => {\r\n    if (!recording) {\r\n      synth.startRecording();\r\n      this.setState({ recording: true });\r\n    } else {\r\n      synth.stopRecording();\r\n      this.setState({ recording: false });\r\n    }\r\n  };\r\n\r\n  handleChange({ target }) {\r\n    switch (target.name) {\r\n      case \"freq\":\r\n        synth.changeFreq(target.value);\r\n        break;\r\n      case \"filter-freq\":\r\n        synth.changeFilterFreq(target.value);\r\n        break;\r\n      case \"amp\":\r\n        synth.changeAmp(target.value);\r\n        break;\r\n      case \"lfo\":\r\n        synth.changeLfoSpeed(target.value);\r\n        break;\r\n      case \"delay-time\":\r\n        synth.changeDelayTime(target.value);\r\n        break;\r\n      case \"delay-feedback\":\r\n        synth.changeDelayFeedback(target.value);\r\n        break;\r\n      default:\r\n        console.log(\"Default case\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"content-wrap\">\r\n        <div>\r\n          <div id=\"synth-interface\">\r\n            <div className=\"top\">\r\n              <button\r\n                className=\"on-btn\"\r\n                onClick={() => this.startSynth(this.state.playing)}\r\n              >\r\n                {this.state.playing ? \"On\" : \"Off\"}\r\n              </button>\r\n              <p className=\"title\">NOISER</p>\r\n              <button\r\n                className=\"record-btn\"\r\n                onClick={() => this.toggleRecording(this.state.recording)}\r\n                name={this.state.recording ? \"stop\" : \"record\"}\r\n              >\r\n                <div\r\n                  className={this.state.recording ? \"square\" : \"circle\"}\r\n                ></div>\r\n              </button>\r\n            </div>\r\n            <div className=\"controls\">\r\n              <div className=\"module\">\r\n                <label\r\n                  className=\"module-Title first-module-title\"\r\n                  htmlFor=\"delay-module\"\r\n                >\r\n                  Source\r\n                </label>\r\n                <div name=\"delay-module\" className=\"controls\">\r\n                  <div className=\"control first-control\">\r\n                    <input\r\n                      type=\"range\"\r\n                      orient=\"vertical\"\r\n                      name=\"amp\"\r\n                      min=\"0\"\r\n                      max=\"1\"\r\n                      step=\"0.01\"\r\n                      onInput={this.handleChange}\r\n                    />\r\n                    <label htmlFor=\"amp\">DCO Volume</label>\r\n                  </div>\r\n                  <div className=\"control\">\r\n                    <input\r\n                      type=\"range\"\r\n                      orient=\"vertical\"\r\n                      name=\"freq\"\r\n                      defaultValue=\"440\"\r\n                      min=\"10\"\r\n                      max=\"8000\"\r\n                      step=\"1\"\r\n                      onInput={this.handleChange}\r\n                    />\r\n                    <label htmlFor=\"freq\">DCO</label>\r\n                  </div>\r\n                  <div className=\"control\">\r\n                    <input\r\n                      type=\"range\"\r\n                      orient=\"vertical\"\r\n                      name=\"filter-freq\"\r\n                      defaultValue=\"1000\"\r\n                      min=\"20\"\r\n                      max=\"8000\"\r\n                      step=\"1\"\r\n                      onInput={this.handleChange}\r\n                    />\r\n                    <label htmlFor=\"filter-freq\">LPF</label>\r\n                  </div>\r\n                  <div className=\"control\">\r\n                    <input\r\n                      type=\"range\"\r\n                      orient=\"vertical\"\r\n                      name=\"lfo\"\r\n                      defaultValue=\"20\"\r\n                      min=\"1\"\r\n                      max=\"100\"\r\n                      step=\"1\"\r\n                      onInput={this.handleChange}\r\n                    />\r\n                    <label htmlFor=\"lfo\">LFO</label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"module\">\r\n                <label className=\"module-Title\" htmlFor=\"delay-module\">\r\n                  Delay\r\n                </label>\r\n                <div name=\"delay-module\" className=\"controls\">\r\n                  <div className=\"control\">\r\n                    <input\r\n                      type=\"range\"\r\n                      orient=\"vertical\"\r\n                      name=\"delay-time\"\r\n                      defaultValue=\"0.5\"\r\n                      min=\"0\"\r\n                      max=\"1\"\r\n                      step=\"0.05\"\r\n                      onInput={this.handleChange}\r\n                    />\r\n                    <label htmlFor=\"delay-time\">Time</label>\r\n                  </div>\r\n                  <div className=\"control\">\r\n                    <input\r\n                      type=\"range\"\r\n                      orient=\"vertical\"\r\n                      name=\"delay-feedback\"\r\n                      defaultValue=\"0.8\"\r\n                      min=\"0\"\r\n                      max=\"0.9\"\r\n                      step=\"0.1\"\r\n                      onInput={this.handleChange}\r\n                    />\r\n                    <label htmlFor=\"delay-feedback\">Feedback</label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"recording\"></div>\r\n          <h3>Recordings</h3>\r\n          <ol id=\"recordingsList\">\r\n            <audio id=\"recording\" controls></audio>\r\n          </ol>\r\n          <div className=\"description\">\r\n            <p>\r\n              Noiser uses the Web Audio API to create earthshattering dubbed out\r\n              noise.\r\n              <br></br>\r\n              <br></br>\r\n              Try sweeping through the frequencies with the digitally controlled\r\n              oscillator (DCO) to build up a wall of noise.\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div id=\"footer\">\r\n          <div>\r\n            <a href=\"https://github.com/ianbaxter/noiser\">\r\n              <svg class=\"dev-svg\" viewBox=\"0 0 128 128\">\r\n                <path\r\n                  fill-rule=\"evenodd\"\r\n                  clip-rule=\"evenodd\"\r\n                  d=\"M64 5.103c-33.347 0-60.388 27.035-60.388 60.388 0 26.682 17.303 49.317 41.297 57.303 3.017.56 4.125-1.31 4.125-2.905 0-1.44-.056-6.197-.082-11.243-16.8 3.653-20.345-7.125-20.345-7.125-2.747-6.98-6.705-8.836-6.705-8.836-5.48-3.748.413-3.67.413-3.67 6.063.425 9.257 6.223 9.257 6.223 5.386 9.23 14.127 6.562 17.573 5.02.542-3.903 2.107-6.568 3.834-8.076-13.413-1.525-27.514-6.704-27.514-29.843 0-6.593 2.36-11.98 6.223-16.21-.628-1.52-2.695-7.662.584-15.98 0 0 5.07-1.623 16.61 6.19C53.7 35 58.867 34.327 64 34.304c5.13.023 10.3.694 15.127 2.033 11.526-7.813 16.59-6.19 16.59-6.19 3.287 8.317 1.22 14.46.593 15.98 3.872 4.23 6.215 9.617 6.215 16.21 0 23.194-14.127 28.3-27.574 29.796 2.167 1.874 4.097 5.55 4.097 11.183 0 8.08-.07 14.583-.07 16.572 0 1.607 1.088 3.49 4.148 2.897 23.98-7.994 41.263-30.622 41.263-57.294C124.388 32.14 97.35 5.104 64 5.104z\"\r\n                ></path>\r\n                <path d=\"M26.484 91.806c-.133.3-.605.39-1.035.185-.44-.196-.685-.605-.543-.906.13-.31.603-.395 1.04-.188.44.197.69.61.537.91zm-.743-.55M28.93 94.535c-.287.267-.85.143-1.232-.28-.396-.42-.47-.983-.177-1.254.298-.266.844-.14 1.24.28.394.426.472.984.17 1.255zm-.575-.618M31.312 98.012c-.37.258-.976.017-1.35-.52-.37-.538-.37-1.183.01-1.44.373-.258.97-.025 1.35.507.368.545.368 1.19-.01 1.452zm0 0M34.573 101.373c-.33.365-1.036.267-1.552-.23-.527-.487-.674-1.18-.343-1.544.336-.366 1.045-.264 1.564.23.527.486.686 1.18.333 1.543zm0 0M39.073 103.324c-.147.473-.825.688-1.51.486-.683-.207-1.13-.76-.99-1.238.14-.477.823-.7 1.512-.485.683.206 1.13.756.988 1.237zm0 0M44.016 103.685c.017.498-.563.91-1.28.92-.723.017-1.308-.387-1.315-.877 0-.503.568-.91 1.29-.924.717-.013 1.306.387 1.306.88zm0 0M48.614 102.903c.086.485-.413.984-1.126 1.117-.7.13-1.35-.172-1.44-.653-.086-.498.422-.997 1.122-1.126.714-.123 1.354.17 1.444.663zm0 0\"></path>\r\n              </svg>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}