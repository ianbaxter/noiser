{"version":3,"sources":["synth.js","components/Control.js","App.js","serviceWorker.js","index.js"],"names":["audioContext","osc","filter","amp","lfo","delay","delaySource","feedback","recorder","recordingStream","window","AudioContext","webkitAudioContext","Control","name","min","max","step","label","handleChange","controlStyle","defultValue","className","type","orient","onInput","defaultValue","htmlFor","synth","createGain","gain","setValueAtTime","currentTime","createBiquadFilter","frequency","createOscillator","value","connect","start","createDelay","delayTime","state","resume","destination","disconnect","oscFreq","console","log","filterFreq","volume","amount","time","createMediaStreamDestination","MediaRecorder","stream","audioBitsPerSecond","mimeType","addEventListener","e","document","querySelector","src","URL","createObjectURL","data","stop","App","useState","playing","setPlaying","recording","setRecording","useEffect","init","target","changeFreq","changeFilterFreq","changeAmp","changeLfoSpeed","changeDelayTime","changeDelayFeedback","onClick","startSynth","viewBox","fill","width","height","d","stopRecording","startRecording","toggleRecording","cx","cy","r","id","controls","href","fillRule","clipRule","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","process","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c79637fc.chunk.js","sourcesContent":["let audioContext,\r\n  osc,\r\n  filter,\r\n  amp,\r\n  lfo,\r\n  delay,\r\n  delaySource,\r\n  feedback,\r\n  recorder,\r\n  recordingStream;\r\n\r\naudioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n\r\nclass Synth {\r\n  init() {\r\n    // Set gain/amp\r\n    amp = audioContext.createGain();\r\n    amp.gain.setValueAtTime(1, audioContext.currentTime);\r\n\r\n    // Set filter\r\n    filter = audioContext.createBiquadFilter();\r\n    filter.type = \"lowshelf\";\r\n    filter.frequency.setValueAtTime(1000, audioContext.currentTime);\r\n    filter.gain.setValueAtTime(25, audioContext.currentTime);\r\n\r\n    // Set oscillator\r\n    osc = audioContext.createOscillator();\r\n    osc.type = \"sine\";\r\n    osc.frequency.value = 440;\r\n\r\n    // Set lfo\r\n    lfo = audioContext.createOscillator();\r\n    lfo.type = \"sine\";\r\n    lfo.frequency.value = 20;\r\n\r\n    // Connect nodes\r\n    lfo.connect(amp.gain);\r\n    osc.connect(filter);\r\n    filter.connect(amp);\r\n    lfo.start();\r\n    osc.start();\r\n\r\n    // Set delay\r\n    delaySource = amp;\r\n    delay = audioContext.createDelay();\r\n    delay.delayTime.value = 0.5;\r\n\r\n    feedback = audioContext.createGain();\r\n    feedback.gain.value = 0.8;\r\n\r\n    delay.connect(feedback);\r\n    feedback.connect(delay);\r\n    delaySource.connect(delay);\r\n  }\r\n\r\n  start() {\r\n    if (audioContext.state !== \"running\") {\r\n      audioContext.resume();\r\n    }\r\n    amp.connect(audioContext.destination);\r\n    delaySource.connect(audioContext.destination);\r\n    delay.connect(audioContext.destination);\r\n  }\r\n\r\n  stop() {\r\n    amp.disconnect(audioContext.destination);\r\n    delay.disconnect(audioContext.destination);\r\n  }\r\n\r\n  changeFreq(oscFreq) {\r\n    console.log(\"DCO frequency: \" + oscFreq + \" Hz\");\r\n    osc.frequency.value = oscFreq;\r\n  }\r\n\r\n  changeFilterFreq(filterFreq) {\r\n    console.log(\"Filter frequency: \" + filterFreq + \" Hz\");\r\n    filter.frequency.value = filterFreq;\r\n  }\r\n\r\n  changeAmp(volume) {\r\n    console.log(\"Volume: \" + volume);\r\n    delaySource.gain.value = volume;\r\n  }\r\n\r\n  changeLfoSpeed(amount) {\r\n    console.log(\"LFO speed: \" + amount + \" Hz\");\r\n    lfo.frequency.value = amount;\r\n  }\r\n\r\n  changeDelayTime(time) {\r\n    console.log(\"Delay time: \" + time);\r\n    delay.delayTime.value = time;\r\n  }\r\n\r\n  changeDelayFeedback(amount) {\r\n    console.log(\"Delay feedback: \" + amount);\r\n    feedback.gain.value = amount;\r\n  }\r\n\r\n  startRecording() {\r\n    recordingStream = audioContext.createMediaStreamDestination();\r\n\r\n    // Connect audio sources to recording stream\r\n    amp.connect(recordingStream);\r\n    delaySource.connect(recordingStream);\r\n    delay.connect(recordingStream);\r\n\r\n    let options = {\r\n      audioBitsPerSecond: 128000, // Maximum possible\r\n      mimeType: \"audio/webm\", // Only available audio format\r\n    };\r\n    recorder = new MediaRecorder(recordingStream.stream, options);\r\n    recorder.start();\r\n  }\r\n\r\n  stopRecording() {\r\n    recorder.addEventListener(\"dataavailable\", function (e) {\r\n      document.querySelector(\"#recording\").src = URL.createObjectURL(e.data);\r\n      recorder = null;\r\n      recordingStream = null;\r\n    });\r\n    recorder.stop();\r\n  }\r\n}\r\n\r\nexport default Synth;\r\n","import React from \"react\";\r\n\r\nconst Control = ({\r\n  name,\r\n  min,\r\n  max,\r\n  step,\r\n  label,\r\n  handleChange,\r\n  controlStyle,\r\n  defultValue,\r\n}) => {\r\n  return (\r\n    <div className={\"control \" + controlStyle}>\r\n      <input\r\n        type=\"range\"\r\n        orient=\"vertical\"\r\n        name={name}\r\n        min={min}\r\n        max={max}\r\n        step={step}\r\n        onInput={handleChange}\r\n        defaultValue={defultValue}\r\n      />\r\n      <label htmlFor={name}>{label}</label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Control;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./index.css\";\r\nimport Synth from \"./synth\";\r\nimport Control from \"./components/Control\";\r\n\r\nlet synth = new Synth();\r\n\r\nconst App = () => {\r\n  const [playing, setPlaying] = useState(false);\r\n  const [recording, setRecording] = useState(false);\r\n\r\n  useEffect(() => {\r\n    synth.init();\r\n  }, []);\r\n\r\n  const startSynth = (playing) => {\r\n    if (playing) {\r\n      synth.stop();\r\n      setPlaying(false);\r\n    } else {\r\n      synth.start();\r\n      setPlaying(true);\r\n    }\r\n  };\r\n\r\n  const toggleRecording = (recording) => {\r\n    if (!recording) {\r\n      synth.startRecording();\r\n      setRecording(true);\r\n    } else {\r\n      synth.stopRecording();\r\n      setRecording(false);\r\n    }\r\n  };\r\n\r\n  const handleChange = ({ target }) => {\r\n    switch (target.name) {\r\n      case \"freq\":\r\n        synth.changeFreq(target.value);\r\n        break;\r\n      case \"filter-freq\":\r\n        synth.changeFilterFreq(target.value);\r\n        break;\r\n      case \"amp\":\r\n        synth.changeAmp(target.value);\r\n        break;\r\n      case \"lfo\":\r\n        synth.changeLfoSpeed(target.value);\r\n        break;\r\n      case \"delay-time\":\r\n        synth.changeDelayTime(target.value);\r\n        break;\r\n      case \"delay-feedback\":\r\n        synth.changeDelayFeedback(target.value);\r\n        break;\r\n      default:\r\n        console.log(\"Default case\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"app-container\">\r\n        <main>\r\n          <div className=\"synth-interface\">\r\n            <div className=\"top-panel\">\r\n              <button\r\n                className=\"btn btn__on\"\r\n                onClick={() => startSynth(playing)}\r\n              >\r\n                <svg\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill={playing ? \"red\" : \"white\"}\r\n                  width=\"32px\"\r\n                  height=\"32px\"\r\n                >\r\n                  <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n                  <path d=\"M13 3h-2v10h2V3zm4.83 2.17l-1.42 1.42C17.99 7.86 19 9.81 19 12c0 3.87-3.13 7-7 7s-7-3.13-7-7c0-2.19 1.01-4.14 2.58-5.42L6.17 5.17C4.23 6.82 3 9.26 3 12c0 4.97 4.03 9 9 9s9-4.03 9-9c0-2.74-1.23-5.18-3.17-6.83z\" />\r\n                </svg>\r\n              </button>\r\n              <h1>NOISER</h1>\r\n              <button\r\n                className=\"btn btn__record\"\r\n                onClick={() => toggleRecording(recording)}\r\n                name={recording ? \"stop\" : \"record\"}\r\n              >\r\n                {recording ? (\r\n                  <svg\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"red\"\r\n                    width=\"32px\"\r\n                    height=\"32px\"\r\n                  >\r\n                    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n                    <path d=\"M6 6h12v12H6z\" />\r\n                  </svg>\r\n                ) : (\r\n                  <svg\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"white\"\r\n                    width=\"32px\"\r\n                    height=\"32px\"\r\n                  >\r\n                    <path d=\"M24 24H0V0h24v24z\" fill=\"none\" />\r\n                    <circle cx=\"12\" cy=\"12\" r=\"8\" />\r\n                  </svg>\r\n                )}\r\n              </button>\r\n            </div>\r\n            <div className=\"main-panel\">\r\n              <div className=\"module module__source\">\r\n                <label\r\n                  className=\"module-title module-title__source\"\r\n                  htmlFor=\"source-module\"\r\n                >\r\n                  Source\r\n                </label>\r\n                <div name=\"source-module\" className=\"controls\">\r\n                  <Control\r\n                    name=\"amp\"\r\n                    min=\"0\"\r\n                    max=\"1\"\r\n                    step=\"0.01\"\r\n                    label=\"DCO Vol\"\r\n                    handleChange={handleChange}\r\n                    controlStyle=\"control__source\"\r\n                  />\r\n                  <Control\r\n                    name=\"freq\"\r\n                    min=\"10\"\r\n                    max=\"8000\"\r\n                    step=\"1\"\r\n                    label=\"DCO Freq\"\r\n                    handleChange={handleChange}\r\n                    controlStyle=\"control__source\"\r\n                    defultValue=\"440\"\r\n                  />\r\n                  <Control\r\n                    name=\"lpf-freq\"\r\n                    min=\"20\"\r\n                    max=\"8000\"\r\n                    step=\"1\"\r\n                    label=\"LPF\"\r\n                    handleChange={handleChange}\r\n                    controlStyle=\"control__source\"\r\n                    defultValue=\"1000\"\r\n                  />\r\n                  <Control\r\n                    name=\"lfo\"\r\n                    min=\"1\"\r\n                    max=\"100\"\r\n                    step=\"1\"\r\n                    label=\"LFO\"\r\n                    handleChange={handleChange}\r\n                    controlStyle=\"control__source\"\r\n                    defultValue=\"20\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"module module__delay\">\r\n                <label className=\"module-title\" htmlFor=\"delay-module\">\r\n                  Delay\r\n                </label>\r\n                <div name=\"delay-module\" className=\"controls\">\r\n                  <Control\r\n                    name=\"delay-time\"\r\n                    min=\"0\"\r\n                    max=\"1.5\"\r\n                    step=\"0.05\"\r\n                    label=\"Time\"\r\n                    handleChange={handleChange}\r\n                    controlStyle=\"control__delay\"\r\n                    defultValue=\"0.5\"\r\n                  />\r\n                  <Control\r\n                    name=\"delay-feedback\"\r\n                    min=\"0\"\r\n                    max=\"0.95\"\r\n                    step=\"0.1\"\r\n                    label=\"Feedback\"\r\n                    handleChange={handleChange}\r\n                    controlStyle=\"control__delay\"\r\n                    defultValue=\"0.8\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div id=\"info-section\">\r\n            <h3>Recordings</h3>\r\n            <ol>\r\n              <audio id=\"recording\" controls></audio>\r\n            </ol>\r\n            <div className=\"description\">\r\n              <p>\r\n                Noiser uses the Web Audio API to create earthshattering dubbed\r\n                out noise.\r\n                <br />\r\n                <br />\r\n                Try sweeping through the frequencies with the digitally\r\n                controlled oscillator (DCO) to build up a wall of noise.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </main>\r\n        <footer>\r\n          <a href=\"https://github.com/ianbaxter/noiser\">\r\n            <svg viewBox=\"0 0 128 128\">\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                clipRule=\"evenodd\"\r\n                d=\"M64 5.103c-33.347 0-60.388 27.035-60.388 60.388 0 26.682 17.303 49.317 41.297 57.303 3.017.56 4.125-1.31 4.125-2.905 0-1.44-.056-6.197-.082-11.243-16.8 3.653-20.345-7.125-20.345-7.125-2.747-6.98-6.705-8.836-6.705-8.836-5.48-3.748.413-3.67.413-3.67 6.063.425 9.257 6.223 9.257 6.223 5.386 9.23 14.127 6.562 17.573 5.02.542-3.903 2.107-6.568 3.834-8.076-13.413-1.525-27.514-6.704-27.514-29.843 0-6.593 2.36-11.98 6.223-16.21-.628-1.52-2.695-7.662.584-15.98 0 0 5.07-1.623 16.61 6.19C53.7 35 58.867 34.327 64 34.304c5.13.023 10.3.694 15.127 2.033 11.526-7.813 16.59-6.19 16.59-6.19 3.287 8.317 1.22 14.46.593 15.98 3.872 4.23 6.215 9.617 6.215 16.21 0 23.194-14.127 28.3-27.574 29.796 2.167 1.874 4.097 5.55 4.097 11.183 0 8.08-.07 14.583-.07 16.572 0 1.607 1.088 3.49 4.148 2.897 23.98-7.994 41.263-30.622 41.263-57.294C124.388 32.14 97.35 5.104 64 5.104z\"\r\n              ></path>\r\n              <path d=\"M26.484 91.806c-.133.3-.605.39-1.035.185-.44-.196-.685-.605-.543-.906.13-.31.603-.395 1.04-.188.44.197.69.61.537.91zm-.743-.55M28.93 94.535c-.287.267-.85.143-1.232-.28-.396-.42-.47-.983-.177-1.254.298-.266.844-.14 1.24.28.394.426.472.984.17 1.255zm-.575-.618M31.312 98.012c-.37.258-.976.017-1.35-.52-.37-.538-.37-1.183.01-1.44.373-.258.97-.025 1.35.507.368.545.368 1.19-.01 1.452zm0 0M34.573 101.373c-.33.365-1.036.267-1.552-.23-.527-.487-.674-1.18-.343-1.544.336-.366 1.045-.264 1.564.23.527.486.686 1.18.333 1.543zm0 0M39.073 103.324c-.147.473-.825.688-1.51.486-.683-.207-1.13-.76-.99-1.238.14-.477.823-.7 1.512-.485.683.206 1.13.756.988 1.237zm0 0M44.016 103.685c.017.498-.563.91-1.28.92-.723.017-1.308-.387-1.315-.877 0-.503.568-.91 1.29-.924.717-.013 1.306.387 1.306.88zm0 0M48.614 102.903c.086.485-.413.984-1.126 1.117-.7.13-1.35-.172-1.44-.653-.086-.498.422-.997 1.122-1.126.714-.123 1.354.17 1.444.663zm0 0\"></path>\r\n            </svg>\r\n          </a>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}